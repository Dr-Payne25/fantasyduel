name: Enhanced CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  # Run pre-commit checks
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - uses: pre-commit/action@v3.0.1

  # Backend checks
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black flake8 pytest pytest-cov isort bandit
    
    - name: Check formatting with Black
      run: black --check .
    
    - name: Check import sorting with isort
      run: isort --check-only --profile black .
    
    - name: Lint with flake8
      run: flake8 . --config=.flake8
    
    - name: Security check with bandit
      run: bandit -r app/ -ll
    
    - name: Run tests with coverage
      run: |
        pytest -v --cov=app --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: backend
        fail_ci_if_error: false
    
    - name: Test FastAPI app startup
      run: |
        timeout 10s python main.py || code=$?
        if [ $code -eq 124 ]; then
          echo "App started successfully (timeout expected)"
        else
          echo "App failed to start"
          exit 1
        fi

  # Frontend checks
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npm run type-check
    
    - name: Lint
      run: npm run lint
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        fail_ci_if_error: false
    
    - name: Build
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 7

  # Integration tests (optional - for future)
  integration:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Install backend dependencies
      working-directory: backend
      run: |
        pip install -r requirements.txt
        pip install pytest pytest-asyncio
    
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
    
    - name: Start backend server
      working-directory: backend
      run: |
        python main.py &
        sleep 5
    
    - name: Run integration tests
      run: |
        # Add integration tests here when ready
        echo "Integration tests placeholder"

  # Summary job
  ci-success:
    needs: [pre-commit, backend, frontend]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Check CI Status
      run: |
        if [ "${{ needs.pre-commit.result }}" != "success" ] || 
           [ "${{ needs.backend.result }}" != "success" ] || 
           [ "${{ needs.frontend.result }}" != "success" ]; then
          echo "CI failed"
          exit 1
        fi
        echo "All CI checks passed!"